<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet 컨텍스트: 이 서블릿의 요청 처리 인프라를 정의합니다 -->

	<!-- Spring MVC @Controller 프로그래밍 모델을 활성화 -->
	<annotation-driven />

	<!-- /resources/**로 시작하는 HTTP GET 요청을 처리하고, ${webappRoot}/resources 디렉토리에서 정적 리소스를 효율적으로 제공합니다 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/images/**" location="/resources/images/" />

	<!-- 컨트롤러에서 선택된 뷰를 /WEB-INF/views 디렉토리의 .jsp 리소스로 해석 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/file/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 컴포넌트 스캔: Spring이 컨트롤러, 서비스 등을 자동으로 등록 -->
	<context:component-scan base-package="com.example.myapp" />

	<!-- 파일 업로드 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="50000000"/>
	</beans:bean>

	<!-- 예외 처리 -->
	<beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="java.lang.RuntimeException">error/runtime</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="defaultErrorView" value="error/default"/>
	</beans:bean>

	<!-- 로그인 인터셉터 설정 (필요시 활성화) -->
	<!--
    <interceptors>
        <interceptor>
            <mapping path="/user/**"/>
            <beans:bean class="com.example.myapp.common.filter.LoginInterceptor"/>
        </interceptor>
    </interceptors>
    -->
</beans:beans>