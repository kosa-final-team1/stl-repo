<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myapp.user.dao.IUserRepository">

    <!-- user_id와 user_pw로 User 객체를 찾는 쿼리 -->
    <select id="getUser" parameterType="hashMap" resultType="com.example.myapp.user.model.User">
        SELECT
            user_no AS userNo,
            user_id AS userId,
            user_pw AS userPw,
            gender,
            age,
            pref_type AS prefType
        FROM user
        WHERE
            user_id = #{userId}
    </select>

    <!-- 새로운 User를 등록하는 쿼리 -->
    <insert id="signUpUser" parameterType="com.example.myapp.user.model.User">
        INSERT INTO user
        (
            user_id,
            user_pw,
            gender,
            age,
            pref_type
        )
        VALUES
            (
                #{userId},
                #{userPw},
                #{gender},
                #{age},
                #{prefType, jdbcType=VARCHAR}
            )
    </insert>

    <!-- user_id로 해당 사용자가 존재하는지 확인 (COUNT 사용) -->
    <select id="getUserId" parameterType="String" resultType="int">
        SELECT
            COUNT(*)
        FROM user
        WHERE
            user_id = #{userId}
    </select>

    <!-- 비밀번호와 선호 유형을 업데이트하는 쿼리 -->
    <update id="updateUser" parameterType="com.example.myapp.user.model.User">
        UPDATE user
        SET user_pw = #{userPw},
            pref_type = #{prefType}
        WHERE user_id = #{userId}
    </update>

    <delete id="deleteUser" parameterType="String">
        DELETE FROM user WHERE user_id = #{userId}
    </delete>
</mapper>